import random


def get_random_card():
    return random.choice(["A", "2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", "K"])

def get_hand_value(hand):
    value = 0
    hasA = 0
    for card in hand:
        if card == "J" or card == "Q" or card == "K":
            value += 10
        elif card == "A":
            hasA += 1
            value += 11
            value += int(card)

    for card in hand:
        if value > 21 and card == "A":
            hasA -= 1
            value -= 10

    return value, hasA

def game(testVar1, testVar2, bj):
    global moneyEarned
    
    moneyEarned -= 1
    
    player_hand = []
    dealer_hand = []

    # Deal the initial cards
    player_hand.append(get_random_card())
    player_hand.append(get_random_card())
    dealer_hand.append(get_random_card())
    dealer_hand.append(get_random_card())

    # Calculate the initial scores
    player_score, playerHasA = get_hand_value(player_hand)
    dealer_score, dealerHasA = get_hand_value(dealer_hand[0])

    if player_score == 21 and bj:
        if get_hand_value(dealer_hand) == 21:
            moneyEarned += 1
            return

        stats["blackjacks"] += 1
        moneyEarned += 3
        

    # Player turn
    while player_score < 21:

        while player_score < 17 or (player_score < testVar1 and int(playerHasA)):
            player_hand.append(get_random_card())
            player_score, playerHasA = get_hand_value(player_hand)
            if player_score > 21:
                stats["player_bust"] += 1
                return
        else:
            break

    # Dealer turn
    while (dealer_score < 17) or (dealer_score < testVar2 and int(dealerHasA)):
        dealer_hand.append(get_random_card())
        dealer_score, dealerHasA = get_hand_value(dealer_hand)
        if dealer_score > 21:
            stats["dealer_bust"] += 1
            moneyEarned += 2
            return

    # Compare scores
    if player_score > dealer_score:
        stats["player_win"] += 1
        moneyEarned += 2
    elif player_score <= dealer_score:
        stats["dealer_win"] += 1
        return
    else:
        moneyEarned += 1

global moneyEarned
global stats

for j in [14, 15, 16, 17, 18, 19]:
    for n in [14, 15, 16, 17, 18, 19, 20, 21]:
    
        moneyEarned = 0
        stats = {
                "dealer_bust": 0,
                "player_bust": 0,
                "dealer_win": 0,
                "player_win": 0,
                "blackjacks": 0
            }
        for i in range(100000):
            game(j, n, False)

        print(f"{j, n}: {moneyEarned} {stats}")