    @commands.command(name="slot", aliases=["slots"], brief="do you ever wish you didn\'t have any money? well do i have the solution for YOU, introducing - gamblingâ„¢")
    @cooldown(1, 5, BucketType.user)
    async def slot_machine_command(self, ctx, amount = None):
        await self.open_account(ctx.author)

        if amount == None:
            await ctx.send("pleeeease enter the amount you wish to waste")
            return

        bal = await self.update_bank_data(ctx.author)

        amount = int(amount)
        if amount > 50000:
            amount = 50000

        if amount > bal[0]:
            await ctx.send("you don\'t have THAT much money")
            return

        if amount < 5:
            await ctx.send("please bet at leaaaast 5 <a:spinningspacecoin:891686810328125502>")
            return

        if amount < 0:
            await ctx.send("sorry, you have to gamble a positive amount of money")
            return

        
        final = []

        slot1 = "<a:slots:849627985857871912>"
        slot2 = "<a:slots:849627985857871912>"
        slot3 = "<a:slots:849627985857871912>"

        msg = await ctx.send(str(final)[:-2]+(str(slot1))+(str(slot2))+(str(slot3)))
        await asyncio.sleep(2)

        slot1 = random.choice([
            "<:Coal:848602311659618315>",
            "<:Redstone:848604340658241576>",
            "<:Iron:848602645207842846>",
            "<:Gold:848602678031548427>",
            "<:Emerald:848602691337060412>",
            "<:Diamond:848602702132019210>"
            ])
        final.append(slot1)
        await msg.edit(content=f"{str(slot1)}{str(slot2)}{str(slot3)}")
        await asyncio.sleep(1.5)
       
        slot2 = random.choice([
          "<:Coal:848602311659618315>",
          "<:Redstone:848604340658241576>",
          "<:Iron:848602645207842846>",
          "<:Gold:848602678031548427>",
          "<:Emerald:848602691337060412>",
          "<:Diamond:848602702132019210>"
          ])
        final.append(slot2)
        await msg.edit(content=f"{str(slot1)}{str(slot2)}{str(slot3)}")
        await asyncio.sleep(1.5)

        slot3 = random.choice([
          "<:Coal:848602311659618315>",
          "<:Redstone:848604340658241576>",
          "<:Iron:848602645207842846>",
          "<:Gold:848602678031548427>",
          "<:Emerald:848602691337060412>",
          "<:Diamond:848602702132019210>"
          ])
        final.append(slot3)
        await msg.edit(content=f"{str(slot1)}{str(slot2)}{str(slot3)}")


        

        if final[0] == "<:Diamond:848602702132019210>" and final[1] == "<:Diamond:848602702132019210>" and final[2] == "<:Diamond:848602702132019210>":
            await self.update_bank_data(ctx.author, 19*amount, "wallet")
            await ctx.send(f"{ctx.author.display_name} won {20*amount} <a:spinningspacecoin:891686810328125502>")

        elif final[0] == "<:Emerald:848602691337060412>" and final[1] == "<:Emerald:848602691337060412>" and final[2] == "<:Emerald:848602691337060412>":
            await self.update_bank_data(ctx.author, 9*amount, "wallet")
            await ctx.send(f"{ctx.author.display_name} won {10*amount} <a:spinningspacecoin:891686810328125502>")

        elif final[0] == "<:Gold:848602678031548427>" and final[1] == "<:Gold:848602678031548427>" and final[2] == "<:Gold:848602678031548427>":
            await self.update_bank_data(ctx.author, 13*amount, "wallet")
            await ctx.send(f"{ctx.author.display_name} won {14*amount} <a:spinningspacecoin:891686810328125502>")

        elif final[0] == "<:Iron:848602645207842846>" and final[1] == "<:Iron:848602645207842846>" and final[2] == "<:Iron:848602645207842846>":
            await self.update_bank_data(ctx.author, 6*amount, "wallet")
            await ctx.send(f"{ctx.author.display_name} won {7*amount} <a:spinningspacecoin:891686810328125502>")

        elif final[0] == "<:Redstone:848604340658241576>" and final[1] == "<:Redstone:848604340658241576>" and final[2] == "<:Redstone:848604340658241576>":
            await self.update_bank_data(ctx.author, 5*amount, "wallet")
            await ctx.send(f"{ctx.author.display_name} won {6*amount} <a:spinningspacecoin:891686810328125502>")

        elif final[0] == "<:Coal:848602311659618315>" and final[1] == "<:Coal:848602311659618315>" and final[2] == "<:Coal:848602311659618315>":
            await self.update_bank_data(ctx.author, 4*amount, "wallet")
            await ctx.send(f"{ctx.author.display_name} won {5*amount} <a:spinningspacecoin:891686810328125502>")
        
        elif final[0] == final[1] or final[0] == final[2] or final[1] == final[2]:
            await self.update_bank_data(ctx.author, 0.5*amount, "wallet")
            await ctx.send(f"{ctx.author.display_name} won {1.5*amount} <a:spinningspacecoin:891686810328125502>")

        else:
            await self.update_bank_data(ctx.author, -1*amount, "wallet")
            await ctx.send(f"<:sadcat:849342846582390834> - {ctx.author.display_name} lost {amount} <a:spinningspacecoin:891686810328125502>")

